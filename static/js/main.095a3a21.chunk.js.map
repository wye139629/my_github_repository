{"version":3,"sources":["logo.svg","shared/fetchData.js","components/SearchRepos.js","components/Repos/reposStyle.js","components/Repos/SelectRepos.js","components/Repos/AllRepos.js","components/Repos/Repos.js","components/Profile.js","shared/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["url","a","fetch","response","json","fetchData","SearchForm","styled","form","Type","div","SearchRepos","languageOptions","changeLanguage","searchingRepos","placeholder","onChange","e","target","value","className","id","map","language","index","RepoItem","li","RepoInfo","props","size","color","type","HTML","CSS","JavaScript","Ruby","LanguageStyle","SelectRepos","repos","repo","name","description","html_url","AllRepos","pages","toEndPage","updateRepo","onScroll","scrollDistance","scrollTop","reposHeight","offsetHeight","scrollingHeight","scrollHeight","reposUrl","cloneRepo","concat","then","newRepo","length","updateRepos","href","Repos","selectRepos","Wrapper","Picture","UserInfo","Profile","useState","user","setUser","useEffect","src","avatar_url","login","followers","following","Nav","nav","NavBar","FlexWrapper","App","allRepos","setAllRepos","classifiedRepo","setClassifiedRepo","setRepos","setPages","setToEndPage","setLanguageOptions","setSelectRepos","repoData","languages","reduce","accu","current","push","filterLanguages","Object","keys","filter","searchedRepos","includes","newRepos","newpage","toEnd","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.095a3a21.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","async function fetchData(url) {\n  const response = await fetch(`https://api.github.com/users/wye139629${url}`);\n  const json = await response.json();\n  return json;\n}\nexport default fetchData;\n","import styled from \"styled-components\";\nconst SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid #ccc;\n  padding: 0 10px 30px 0;\n  input {\n    font-size: 15px;\n    flex-grow: 5;\n    margin: 0 10px 0 0;\n    padding: 10px;\n    border-radius: 10px;\n    :focus {\n      outline: none;\n    }\n  }\n  .typeGroup {\n    flex-grow: 1;\n  }\n`;\nconst Type = styled.div`\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  font-size: 20px;\n  padding: 10px 0;\n  select {\n    font-size: 15px;\n    border: none;\n    :focus {\n      outline: none;\n    }\n  }\n`;\n\nfunction SearchRepos({ languageOptions, changeLanguage, searchingRepos }) {\n  const changeHandler = (e) => {\n    changeLanguage(e.target.value);\n  };\n  const typingHandler = (e) => {\n    searchingRepos(e.target.value);\n  };\n  return (\n    <SearchForm>\n      <input placeholder=\"Find a repository...\" onChange={typingHandler} />\n      <Type className=\"typeGroup\">\n        <label>Language:</label>\n        <select id=\"types\" onChange={changeHandler}>\n          <option value=\"\">All</option>\n          {languageOptions &&\n            languageOptions.map((language, index) => {\n              return (\n                <option key={index} value={language}>\n                  {language}\n                </option>\n              );\n            })}\n        </select>\n      </Type>\n    </SearchForm>\n  );\n}\n\nexport default SearchRepos;\n","import styled from \"styled-components\";\nexport const RepoItem = styled.li`\n  padding: 30px 0;\n  + li {\n    border-top: 1px solid #ccc;\n  }\n`;\n\nexport const RepoInfo = styled.li`\n  font-size: ${(props) => props.size || \"15px\"};\n  color: ${(props) => props.color || \"#586069\"};\n  + li {\n    margin-top: 10px;\n  }\n`;\nconst type = {\n  HTML: \"#e34c26\",\n  CSS: \"#563d7c\",\n  JavaScript: \"#f1e05a\",\n  Ruby: \"#701516\",\n};\n\nexport const LanguageStyle = styled(RepoInfo)`\n  &:before {\n    content: \"\";\n    display: inline-block;\n    margin-right: 10px;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background-color: ${(props) => type[props.type]};\n  }\n`;\n","import { RepoItem, RepoInfo } from \"./reposStyle\";\nfunction SelectRepos({ repos }) {\n  return (\n    <ul className=\"repo\">\n      {repos.map((repo, index) => {\n        return (\n          <RepoItem key={index}>\n            <ul>\n              <RepoInfo size=\"25px\" color=\"#0366d6\">\n                {repo.name}\n              </RepoInfo>\n              <RepoInfo>{repo.description}</RepoInfo>\n              <RepoInfo>{repo.language}</RepoInfo>\n              <RepoInfo>Link:{repo.html_url}</RepoInfo>\n            </ul>\n          </RepoItem>\n        );\n      })}\n    </ul>\n  );\n}\nexport default SelectRepos;\n","import fetchData from \"../../shared/fetchData\";\nimport { RepoItem, RepoInfo, LanguageStyle } from \"./reposStyle\";\nfunction AllRepos({ repos, pages, toEndPage, updateRepo }) {\n  const scrollHandler = (e) => {\n    let scrollDistance = e.target.scrollTop;\n    let reposHeight = e.target.offsetHeight;\n    let scrollingHeight = e.target.scrollHeight;\n    let toBottom = scrollDistance + reposHeight === scrollingHeight;\n    if (!toEndPage && toBottom) {\n      pages += 1;\n      const repoAmount = 5;\n      const reposUrl = `/repos?per_page=${repoAmount}&page=${pages}`;\n      const cloneRepo = repos.concat();\n      fetchData(reposUrl).then((newRepo) => {\n        toEndPage = newRepo.length < repoAmount;\n        const updateRepos = cloneRepo.concat(newRepo);\n        updateRepo(updateRepos, pages, toEndPage);\n      });\n    }\n    // console.log(1);\n    if (!repos) return null;\n  };\n  return (\n    <ul className=\"repo\" onScroll={toEndPage ? null : scrollHandler}>\n      {repos.map((repo, index) => {\n        return (\n          <RepoItem key={index}>\n            <ul>\n              <RepoInfo size=\"25px\" color=\"#0366d6\">\n                {repo.name}\n              </RepoInfo>\n              <RepoInfo>{repo.description}</RepoInfo>\n              <LanguageStyle type={repo.language}>\n                {repo.language}\n              </LanguageStyle>\n              <RepoInfo>\n                Link: <a href={repo.html_url}>{repo.html_url}</a>\n              </RepoInfo>\n            </ul>\n          </RepoItem>\n        );\n      })}\n    </ul>\n  );\n}\nexport default AllRepos;\n","import SelectRepos from \"./SelectRepos\";\nimport AllRepos from \"./AllRepos\";\n\nfunction Repos({ repos, selectRepos, pages, toEndPage, updateRepo }) {\n  return (\n    <div>\n      {selectRepos ? (\n        <SelectRepos repos={selectRepos} />\n      ) : (\n        <AllRepos\n          repos={repos}\n          pages={pages}\n          toEndPage={toEndPage}\n          updateRepo={updateRepo}\n        ></AllRepos>\n      )}\n    </div>\n  );\n}\nexport default Repos;\n","import { useState, useEffect } from \"react\";\nimport fetchData from \"../shared/fetchData\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 20%;\n  box-sizing: border-box;\n  padding: 0 20px;\n  @media (max-width: 768px) {\n    display: flex;\n    width: 100%;\n    margin-bottom: 30px;\n  }\n`;\nconst Picture = styled.div`\n  img {\n    border-radius: 50%;\n    width: 100%;\n  }\n  @media (max-width: 768px) {\n    width: 20%;\n    min-width: 128px;\n  }\n`;\n\nconst UserInfo = styled.div`\n  text-align: start;\n  margin-top: 15px;\n  white-space: nowrap;\n  h3,\n  h4 {\n    margin: 5px 0;\n  }\n  h3 {\n    font-size: 25px;\n  }\n  h4 {\n    color: #586069;\n    font-size: 20px;\n  }\n\n  span + span {\n    margin-left: 10px;\n  }\n  @media (max-width: 992px) {\n    span {\n      display: block;\n    }\n    span + span {\n      margin: 0;\n    }\n    @media (max-width: 768px) {\n      margin-left: 20px;\n      span {\n        display: inline-block;\n      }\n      span + span {\n        margin-left: 10px;\n      }\n    }\n  }\n`;\n\nfunction Profile() {\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    fetchData(\"\").then((user) => setUser(user));\n  }, []);\n  if (!user) return null;\n  return (\n    <Wrapper>\n      <Picture>\n        <img src={user.avatar_url} />\n      </Picture>\n      <UserInfo>\n        <h3>{user.name}</h3>\n        <h4>{user.login}</h4>\n        <div>\n          <span>{user.followers} followers</span>\n          <span>{user.following} following</span>\n        </div>\n      </UserInfo>\n    </Wrapper>\n  );\n}\nexport default Profile;\n","import styled from \"styled-components\";\n\nconst Nav = styled.nav`\n  background-color: #24292e;\n  height: 62px;\n  margin-bottom: 30px;\n  h1 {\n    font-size: 20px;\n    margin: 0;\n    color: white;\n    line-height: 62px;\n  }\n`;\n\nfunction NavBar() {\n  return (\n    <Nav>\n      <h1>My GitHub Repositories</h1>\n    </Nav>\n  );\n}\n\nexport default NavBar;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport fetchData from \"./shared/fetchData\";\nimport SearchRepos from \"./components/SearchRepos\";\nimport Repos from \"./components/Repos/Repos\";\nimport Profile from \"./components/Profile\";\nimport NavBar from \"./shared/NavBar\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 80%;\n  box-sizing: border-box;\n  padding: 0 30px;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst FlexWrapper = styled(Wrapper)`\n  display: flex;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 0 10px;\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\nfunction App() {\n  const [allRepos, setAllRepos] = useState(null);\n  const [classifiedRepo, setClassifiedRepo] = useState(null);\n  const [repos, setRepos] = useState(null);\n  const [pages, setPages] = useState(1);\n  const [toEndPage, setToEndPage] = useState(false);\n  const [languageOptions, setLanguageOptions] = useState(null);\n  const [selectRepos, setSelectRepos] = useState(null);\n\n  useEffect(() => {\n    const repoAmount = 5;\n    const reposUrl = `/repos?per_page=${repoAmount}&page=${pages}`;\n    fetchData(reposUrl).then((repoData) => setRepos(repoData));\n  }, []);\n  useEffect(() => {\n    const reposUrl = `/repos?per_page=&page=`;\n    fetchData(reposUrl).then((repoData) => {\n      const languages = repoData.reduce((accu, current) => {\n        accu[current.language]\n          ? accu[current.language].push(current)\n          : (accu[current.language] = [current]);\n        return accu;\n      }, {});\n      const filterLanguages = Object.keys(languages).filter(\n        (language) => language !== \"null\"\n      );\n      setAllRepos(repoData);\n      setClassifiedRepo(languages);\n      setLanguageOptions(filterLanguages);\n    });\n  }, []);\n\n  const updateRepo = (newRepos, newpage, toEnd) => {\n    setToEndPage(toEnd);\n    setPages(newpage);\n    setRepos(newRepos);\n  };\n\n  const changeLanguage = (language) => {\n    setSelectRepos(classifiedRepo[language]);\n  };\n\n  const searchingRepos = (name) => {\n    const searchedRepos = allRepos.filter((repo) => {\n      if (repo.name.includes(name)) {\n        return repo;\n      }\n    });\n    setSelectRepos(searchedRepos);\n  };\n\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <FlexWrapper>\n        <Profile />\n        <Wrapper>\n          <SearchRepos\n            languageOptions={languageOptions}\n            changeLanguage={changeLanguage}\n            searchingRepos={searchingRepos}\n          />\n          {repos && (\n            <Repos\n              repos={repos}\n              selectRepos={selectRepos}\n              pages={pages}\n              toEndPage={toEndPage}\n              updateRepo={updateRepo}\n            ></Repos>\n          )}\n        </Wrapper>\n      </FlexWrapper>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}